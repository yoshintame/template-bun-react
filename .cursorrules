### Code Implementation Guidelines

- Use top level function declarations instead of arrow functions.
- Use destructuring parameters instead of positional parameters.
- Use Kebab-case for directories and files names.
- Use console.log({value}) instead of console.log(value)
- Favor named exports for components.
- Never write comments in code unless I ask you to do so.
- Use accessibility accessibility modifier on method definitions including constructor.

### TypeScript Usage

- Use TypeScript for all code; prefer interfaces over types.
- Use TypeScript enums for constants.
- Use functional components with TypeScript interfaces.
- Use strict mode in TypeScript for better type safety.
- Never use any type.

### Error Handling and Validation

- Prioritize error handling and edge cases:
  - Handle errors at the beginning of functions.
  - Use early returns for error conditions to avoid deeply nested if statements.
  - Avoid unnecessary else statements; use if-return pattern instead.
  - Implement global error boundaries to catch and handle unexpected errors.
